{"version":3,"sources":["countries.js","schema.js","uischema.js","Rating.tsx","RatingControl.tsx","ratingControlTester.ts","MakePopulatedEML.tsx","eml-blank.xml.js","MakeEMLButton.tsx","initialData.js","App.tsx","index.tsx"],"names":["countries","Object","keys","map","k","index","const","title","person_items","type","properties","givenName","surName","electronicMailAddress","positionName","organizationName","city","country","enum","description","userId","schema","abstract","creator","items","contact","metadataProvider","associatedParty","geographicCoverage","westBoundingCoordinate","eastBoundingCoordinate","northBoundingCoordinate","southBoundingCoordinate","taxonomicCoverage","generalTaxonomicCoverage","taxonomicClassification","taxonRankName","taxonRankValue","commonName","singleDateTime","calendarDate","format","rangeOfDates","beginDate","endDate","additionalMetadata","formationPeriod","livingTimePeriod","project","funding","keywordSet","keywordThesaurus","keyword","methodStep","studyExtent","samplingDescription","qualityControl","bibliography","citation","citation__identifier","required","collection","collectionName","collectionIdentifier","parentCollectionIdentifier","specimenPreservationMethod","jgtiCuratorialUnit","beginRange","endRange","online","url","physical","objectName","characterEncoding","formatName","formatVersion","purpose","maintenance","additionalInfo","alternateIdentifier","uischema","elements","label","scope","options","multi","variant","showNavButtons","Rating","id","value","updateValue","useState","hoverAt","setHoverAt","className","style","cursor","i","fullStars","onMouseOver","onMouseOut","onClick","withJsonFormsControlProps","data","handleChange","path","newValue","rankWith","scopeEndsWith","Seek","nodeKey","nodeValue","parentNode","identifier_attribute","node","querySelector","split","join","innerHTML","setAttribute","Array","isArray","emptyNodeTemplate","cloneNode","entries","v","newSiblingNode","insertBefore","nextSibling","length","includes","String","item","newNode","MakePopulatedEML","jsonformsData","emlDoc","DOMParser","parseFromString","console","log","fieldKey","fieldValue","XMLSerializer","serializeToString","replace","MakeEMLButton","Button","element","document","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","color","initialData","useStyles","makeStyles","_theme","container","padding","width","textAlign","dataContent","display","justifyContent","borderRadius","backgroundColor","marginBottom","resetButton","margin","demoform","initialDataSeed","renderers","materialRenderers","tester","ratingControlTester","renderer","RatingControl","App","classes","setJsonformsData","Grid","justify","spacing","sm","cells","materialCells","onChange","errors","theme","createMuiTheme","overrides","MuiFormControl","root","ReactDOM","render","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.8e677a62.chunk.js","sourcesContent":["var countries_code_key = { AF: 'AFGHANISTAN',  AL: 'ALBANIA',  DZ: 'ALGERIA',  AS: 'AMERICAN SAMOA',  AD: 'ANDORRA',  AO: 'ANGOLA',  AI: 'ANGUILLA',  AQ: 'ANTARCTICA',  AG: 'ANTIGUA AND BARBUDA',  AR: 'ARGENTINA',  AM: 'ARMENIA',  AW: 'ARUBA',  AU: 'AUSTRALIA',  AT: 'AUSTRIA',  AZ: 'AZERBAIJAN',  BS: 'BAHAMAS',  BH: 'BAHRAIN',  BD: 'BANGLADESH',  BB: 'BARBADOS',  BY: 'BELARUS',  BE: 'BELGIUM',  BZ: 'BELIZE',  BJ: 'BENIN',  BM: 'BERMUDA',  BT: 'BHUTAN',  BO: 'BOLIVIA',  BQ: 'BONAIRE, SINT EUSTATIUS AND SABA',  BA: 'BOSNIA AND HERZEGOVINA',  BW: 'BOTSWANA',  BV: 'BOUVET ISLAND',  BR: 'BRAZIL',  IO: 'BRITISH INDIAN OCEAN TERRITORY',  BN: 'BRUNEI DARUSSALAM',  BG: 'BULGARIA',  BF: 'BURKINA FASO',  BI: 'BURUNDI',  CV: 'CABO VERDE',  KH: 'CAMBODIA',  CM: 'CAMEROON',  CA: 'CANADA',  KY: 'CAYMAN ISLANDS',  CF: 'CENTRAL AFRICAN REPUBLIC',  TD: 'CHAD',  CL: 'CHILE',  CN: 'CHINA',  CX: 'CHRISTMAS ISLAND',  CC: 'COCOS (KEELING) ISLANDS',  CO: 'COLOMBIA',  KM: 'COMOROS',  CG: 'CONGO',  CD: 'CONGO, THE DEMOCRATIC REPUBLIC OF THE',  CK: 'COOK ISLANDS',  CR: 'COSTA RICA',  HR: 'CROATIA',  CU: 'CUBA',  CW: 'CURAÇAO',  CY: 'CYPRUS',  CZ: 'CZECHIA',  CI: 'CÔTE D’IVOIRE',  DK: 'DENMARK',  DJ: 'DJIBOUTI',  DM: 'DOMINICA',  DO: 'DOMINICAN REPUBLIC',  EC: 'ECUADOR',  EG: 'EGYPT',  SV: 'EL SALVADOR',  GQ: 'EQUATORIAL GUINEA',  ER: 'ERITREA',  EE: 'ESTONIA',  ET: 'ETHIOPIA',  FK: 'FALKLAND ISLANDS (MALVINAS)',  FO: 'FAROE ISLANDS',  FJ: 'FIJI',  FI: 'FINLAND',  FR: 'FRANCE',  GF: 'FRENCH GUIANA',  PF: 'FRENCH POLYNESIA',  TF: 'FRENCH SOUTHERN TERRITORIES',  GA: 'GABON',  GM: 'GAMBIA',  GE: 'GEORGIA',  DE: 'GERMANY',  GH: 'GHANA',  GI: 'GIBRALTAR',  GR: 'GREECE',  GL: 'GREENLAND',  GD: 'GRENADA',  GP: 'GUADELOUPE',  GU: 'GUAM',  GT: 'GUATEMALA',  GG: 'GUERNSEY',  GN: 'GUINEA',  GW: 'GUINEA-BISSAU',  GY: 'GUYANA',  HT: 'HAITI',  HM: 'HEARD ISLAND AND MCDONALD ISLANDS',  HN: 'HONDURAS',  HK: 'HONG KONG',  HU: 'HUNGARY',  IS: 'ICELAND',  IN: 'INDIA',  ID: 'INDONESIA',  IR: 'IRAN (ISLAMIC REPUBLIC OF)',  IQ: 'IRAQ',  IE: 'IRELAND',  IM: 'ISLE OF MAN',  IL: 'ISRAEL',  IT: 'ITALY',  JM: 'JAMAICA',  JP: 'JAPAN',  JE: 'JERSEY',  JO: 'JORDAN',  KZ: 'KAZAKHSTAN',  KE: 'KENYA',  KI: 'KIRIBATI',  KP: 'KOREA, DEMOCRATIC PEOPLE’S REPUBLIC OF',  KR: 'KOREA, REPUBLIC OF',  XK: 'KOSOVO',  KW: 'KUWAIT',  KG: 'KYRGYZSTAN',  LA: 'LAO PEOPLE’S DEMOCRATIC REPUBLIC',  LV: 'LATVIA',  LB: 'LEBANON',  LS: 'LESOTHO',  LR: 'LIBERIA',  LY: 'LIBYA',  LI: 'LIECHTENSTEIN',  LT: 'LITHUANIA',  LU: 'LUXEMBOURG',  MO: 'MACAO',  MK: 'MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF',  MG: 'MADAGASCAR',  MW: 'MALAWI',  MY: 'MALAYSIA',  MV: 'MALDIVES',  ML: 'MALI',  MT: 'MALTA',  MH: 'MARSHALL ISLANDS',  MQ: 'MARTINIQUE',  MR: 'MAURITANIA',  MU: 'MAURITIUS',  YT: 'MAYOTTE',  MX: 'MEXICO',  FM: 'MICRONESIA, FEDERATED STATES OF',  MD: 'MOLDOVA, REPUBLIC OF',  MC: 'MONACO',  MN: 'MONGOLIA',  ME: 'MONTENEGRO',  MS: 'MONTSERRAT',  MA: 'MOROCCO',  MZ: 'MOZAMBIQUE',  MM: 'MYANMAR',  NA: 'NAMIBIA',  NR: 'NAURU',  NP: 'NEPAL',  NL: 'NETHERLANDS',  NC: 'NEW CALEDONIA',  NZ: 'NEW ZEALAND',  NI: 'NICARAGUA',  NE: 'NIGER',  NG: 'NIGERIA',  NU: 'NIUE',  NF: 'NORFOLK ISLAND',  MP: 'NORTHERN MARIANA ISLANDS',  NO: 'NORWAY',  OM: 'OMAN',  PK: 'PAKISTAN',  PW: 'PALAU',  PS: 'PALESTINE, STATE OF',  PA: 'PANAMA',  PG: 'PAPUA NEW GUINEA',  PY: 'PARAGUAY',  PE: 'PERU',  PH: 'PHILIPPINES',  PN: 'PITCAIRN',  PL: 'POLAND',  PT: 'PORTUGAL',  PR: 'PUERTO RICO',  QA: 'QATAR',  RE: 'REUNION',  RO: 'ROMANIA',  RU: 'RUSSIAN FEDERATION',  RW: 'RWANDA',  BL: 'SAINT BARTHELEMY',  SH: 'SAINT HELENA',  KN: 'SAINT KITTS AND NEVIS',  LC: 'SAINT LUCIA',  MF: 'SAINT MARTIN (FRENCH PART)',  PM: 'SAINT PIERRE AND MIQUELON',  VC: 'SAINT VINCENT AND THE GRENADINES',  WS: 'SAMOA',  SM: 'SAN MARINO',  ST: 'SAO TOME AND PRINCIPE',  SA: 'SAUDI ARABIA',  SN: 'SENEGAL',  RS: 'SERBIA',  SC: 'SEYCHELLES',  SL: 'SIERRA LEONE',  SG: 'SINGAPORE',  SX: 'SINT MAARTEN (DUTCH PART)',  SK: 'SLOVAKIA',  SI: 'SLOVENIA',  SB: 'SOLOMON ISLANDS',  SO: 'SOMALIA',  ZA: 'SOUTH AFRICA',  GS: 'SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS',  SS: 'SOUTH SUDAN',  ES: 'SPAIN',  LK: 'SRI LANKA',  SD: 'SUDAN',  SR: 'SURINAME',  SJ: 'SVALBARD AND JAN MAYEN',  SZ: 'SWAZILAND',  SE: 'SWEDEN',  CH: 'SWITZERLAND',  SY: 'SYRIAN ARAB REPUBLIC',  TW: 'TAIWAN',  TJ: 'TAJIKISTAN',  TZ: 'TANZANIA, UNITED REPUBLIC OF',  TH: 'THAILAND',  TL: 'TIMOR-LESTE',  TG: 'TOGO',  TK: 'TOKELAU',  TO: 'TONGA',  TT: 'TRINIDAD AND TOBAGO',  TN: 'TUNISIA',  TR: 'TURKEY',  TM: 'TURKMENISTAN',  TC: 'TURKS AND CAICOS ISLANDS',  TV: 'TUVALU',  UG: 'UGANDA',  UA: 'UKRAINE',  AE: 'UNITED ARAB EMIRATES',  GB: 'UNITED KINGDOM',  US: 'UNITED STATES',  UM: 'UNITED STATES MINOR OUTLYING ISLANDS',  UY: 'URUGUAY',  UZ: 'UZBEKISTAN',  VU: 'VANUATU',  VA: 'VATICAN CITY STATE (HOLY SEE)',  VE: 'VENEZUELA',  VN: 'VIET NAM',  VG: 'VIRGIN ISLANDS (BRITISH)',  VI: 'VIRGIN ISLANDS (U.S.)',  WF: 'WALLIS AND FUTUNA',  EH: 'WESTERN SAHARA',  YE: 'YEMEN',  ZM: 'ZAMBIA',  ZW: 'ZIMBABWE',  AX: 'ÅLAND ISLANDS' };\n\nvar countries = { \"AFGHANISTAN\": \"AF\", \"ALBANIA\": \"AL\", \"ALGERIA\": \"DZ\", \"AMERICAN SAMOA\": \"AS\", \"ANDORRA\": \"AD\", \"ANGOLA\": \"AO\", \"ANGUILLA\": \"AI\", \"ANTARCTICA\": \"AQ\", \"ANTIGUA AND BARBUDA\": \"AG\", \"ARGENTINA\": \"AR\", \"ARMENIA\": \"AM\", \"ARUBA\": \"AW\", \"AUSTRALIA\": \"AU\", \"AUSTRIA\": \"AT\", \"AZERBAIJAN\": \"AZ\", \"BAHAMAS\": \"BS\", \"BAHRAIN\": \"BH\", \"BANGLADESH\": \"BD\", \"BARBADOS\": \"BB\", \"BELARUS\": \"BY\", \"BELGIUM\": \"BE\", \"BELIZE\": \"BZ\", \"BENIN\": \"BJ\", \"BERMUDA\": \"BM\", \"BHUTAN\": \"BT\", \"BOLIVIA\": \"BO\", \"BONAIRE, SINT EUSTATIUS AND SABA\": \"BQ\", \"BOSNIA AND HERZEGOVINA\": \"BA\", \"BOTSWANA\": \"BW\", \"BOUVET ISLAND\": \"BV\", \"BRAZIL\": \"BR\", \"BRITISH INDIAN OCEAN TERRITORY\": \"IO\", \"BRUNEI DARUSSALAM\": \"BN\", \"BULGARIA\": \"BG\", \"BURKINA FASO\": \"BF\", \"BURUNDI\": \"BI\", \"CABO VERDE\": \"CV\", \"CAMBODIA\": \"KH\", \"CAMEROON\": \"CM\", \"CANADA\": \"CA\", \"CAYMAN ISLANDS\": \"KY\", \"CENTRAL AFRICAN REPUBLIC\": \"CF\", \"CHAD\": \"TD\", \"CHILE\": \"CL\", \"CHINA\": \"CN\", \"CHRISTMAS ISLAND\": \"CX\", \"COCOS (KEELING) ISLANDS\": \"CC\", \"COLOMBIA\": \"CO\", \"COMOROS\": \"KM\", \"CONGO\": \"CG\", \"CONGO, THE DEMOCRATIC REPUBLIC OF THE\": \"CD\", \"COOK ISLANDS\": \"CK\", \"COSTA RICA\": \"CR\", \"CROATIA\": \"HR\", \"CUBA\": \"CU\", \"CURAÇAO\": \"CW\", \"CYPRUS\": \"CY\", \"CZECHIA\": \"CZ\", \"CÔTE D’IVOIRE\": \"CI\", \"DENMARK\": \"DK\", \"DJIBOUTI\": \"DJ\", \"DOMINICA\": \"DM\", \"DOMINICAN REPUBLIC\": \"DO\", \"ECUADOR\": \"EC\", \"EGYPT\": \"EG\", \"EL SALVADOR\": \"SV\", \"EQUATORIAL GUINEA\": \"GQ\", \"ERITREA\": \"ER\", \"ESTONIA\": \"EE\", \"ETHIOPIA\": \"ET\", \"FALKLAND ISLANDS (MALVINAS)\": \"FK\", \"FAROE ISLANDS\": \"FO\", \"FIJI\": \"FJ\", \"FINLAND\": \"FI\", \"FRANCE\": \"FR\", \"FRENCH GUIANA\": \"GF\", \"FRENCH POLYNESIA\": \"PF\", \"FRENCH SOUTHERN TERRITORIES\": \"TF\", \"GABON\": \"GA\", \"GAMBIA\": \"GM\", \"GEORGIA\": \"GE\", \"GERMANY\": \"DE\", \"GHANA\": \"GH\", \"GIBRALTAR\": \"GI\", \"GREECE\": \"GR\", \"GREENLAND\": \"GL\", \"GRENADA\": \"GD\", \"GUADELOUPE\": \"GP\", \"GUAM\": \"GU\", \"GUATEMALA\": \"GT\", \"GUERNSEY\": \"GG\", \"GUINEA\": \"GN\", \"GUINEA-BISSAU\": \"GW\", \"GUYANA\": \"GY\", \"HAITI\": \"HT\", \"HEARD ISLAND AND MCDONALD ISLANDS\": \"HM\", \"HONDURAS\": \"HN\", \"HONG KONG\": \"HK\", \"HUNGARY\": \"HU\", \"ICELAND\": \"IS\", \"INDIA\": \"IN\", \"INDONESIA\": \"ID\", \"IRAN (ISLAMIC REPUBLIC OF)\": \"IR\", \"IRAQ\": \"IQ\", \"IRELAND\": \"IE\", \"ISLE OF MAN\": \"IM\", \"ISRAEL\": \"IL\", \"ITALY\": \"IT\", \"JAMAICA\": \"JM\", \"JAPAN\": \"JP\", \"JERSEY\": \"JE\", \"JORDAN\": \"JO\", \"KAZAKHSTAN\": \"KZ\", \"KENYA\": \"KE\", \"KIRIBATI\": \"KI\", \"KOREA, DEMOCRATIC PEOPLE’S REPUBLIC OF\": \"KP\", \"KOREA, REPUBLIC OF\": \"KR\", \"KOSOVO\": \"XK\", \"KUWAIT\": \"KW\", \"KYRGYZSTAN\": \"KG\", \"LAO PEOPLE’S DEMOCRATIC REPUBLIC\": \"LA\", \"LATVIA\": \"LV\", \"LEBANON\": \"LB\", \"LESOTHO\": \"LS\", \"LIBERIA\": \"LR\", \"LIBYA\": \"LY\", \"LIECHTENSTEIN\": \"LI\", \"LITHUANIA\": \"LT\", \"LUXEMBOURG\": \"LU\", \"MACAO\": \"MO\", \"MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF\": \"MK\", \"MADAGASCAR\": \"MG\", \"MALAWI\": \"MW\", \"MALAYSIA\": \"MY\", \"MALDIVES\": \"MV\", \"MALI\": \"ML\", \"MALTA\": \"MT\", \"MARSHALL ISLANDS\": \"MH\", \"MARTINIQUE\": \"MQ\", \"MAURITANIA\": \"MR\", \"MAURITIUS\": \"MU\", \"MAYOTTE\": \"YT\", \"MEXICO\": \"MX\", \"MICRONESIA, FEDERATED STATES OF\": \"FM\", \"MOLDOVA, REPUBLIC OF\": \"MD\", \"MONACO\": \"MC\", \"MONGOLIA\": \"MN\", \"MONTENEGRO\": \"ME\", \"MONTSERRAT\": \"MS\", \"MOROCCO\": \"MA\", \"MOZAMBIQUE\": \"MZ\", \"MYANMAR\": \"MM\", \"NAMIBIA\": \"NA\", \"NAURU\": \"NR\", \"NEPAL\": \"NP\", \"NETHERLANDS\": \"NL\", \"NEW CALEDONIA\": \"NC\", \"NEW ZEALAND\": \"NZ\", \"NICARAGUA\": \"NI\", \"NIGER\": \"NE\", \"NIGERIA\": \"NG\", \"NIUE\": \"NU\", \"NORFOLK ISLAND\": \"NF\", \"NORTHERN MARIANA ISLANDS\": \"MP\", \"NORWAY\": \"NO\", \"OMAN\": \"OM\", \"PAKISTAN\": \"PK\", \"PALAU\": \"PW\", \"PALESTINE, STATE OF\": \"PS\", \"PANAMA\": \"PA\", \"PAPUA NEW GUINEA\": \"PG\", \"PARAGUAY\": \"PY\", \"PERU\": \"PE\", \"PHILIPPINES\": \"PH\", \"PITCAIRN\": \"PN\", \"POLAND\": \"PL\", \"PORTUGAL\": \"PT\", \"PUERTO RICO\": \"PR\", \"QATAR\": \"QA\", \"REUNION\": \"RE\", \"ROMANIA\": \"RO\", \"RUSSIAN FEDERATION\": \"RU\", \"RWANDA\": \"RW\", \"SAINT BARTHELEMY\": \"BL\", \"SAINT HELENA\": \"SH\", \"SAINT KITTS AND NEVIS\": \"KN\", \"SAINT LUCIA\": \"LC\", \"SAINT MARTIN (FRENCH PART)\": \"MF\", \"SAINT PIERRE AND MIQUELON\": \"PM\", \"SAINT VINCENT AND THE GRENADINES\": \"VC\", \"SAMOA\": \"WS\", \"SAN MARINO\": \"SM\", \"SAO TOME AND PRINCIPE\": \"ST\", \"SAUDI ARABIA\": \"SA\", \"SENEGAL\": \"SN\", \"SERBIA\": \"RS\", \"SEYCHELLES\": \"SC\", \"SIERRA LEONE\": \"SL\", \"SINGAPORE\": \"SG\", \"SINT MAARTEN (DUTCH PART)\": \"SX\", \"SLOVAKIA\": \"SK\", \"SLOVENIA\": \"SI\", \"SOLOMON ISLANDS\": \"SB\", \"SOMALIA\": \"SO\", \"SOUTH AFRICA\": \"ZA\", \"SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS\": \"GS\", \"SOUTH SUDAN\": \"SS\", \"SPAIN\": \"ES\", \"SRI LANKA\": \"LK\", \"SUDAN\": \"SD\", \"SURINAME\": \"SR\", \"SVALBARD AND JAN MAYEN\": \"SJ\", \"SWAZILAND\": \"SZ\", \"SWEDEN\": \"SE\", \"SWITZERLAND\": \"CH\", \"SYRIAN ARAB REPUBLIC\": \"SY\", \"TAIWAN\": \"TW\", \"TAJIKISTAN\": \"TJ\", \"TANZANIA, UNITED REPUBLIC OF\": \"TZ\", \"THAILAND\": \"TH\", \"TIMOR-LESTE\": \"TL\", \"TOGO\": \"TG\", \"TOKELAU\": \"TK\", \"TONGA\": \"TO\", \"TRINIDAD AND TOBAGO\": \"TT\", \"TUNISIA\": \"TN\", \"TURKEY\": \"TR\", \"TURKMENISTAN\": \"TM\", \"TURKS AND CAICOS ISLANDS\": \"TC\", \"TUVALU\": \"TV\", \"UGANDA\": \"UG\", \"UKRAINE\": \"UA\", \"UNITED ARAB EMIRATES\": \"AE\", \"UNITED KINGDOM\": \"GB\", \"UNITED STATES\": \"US\", \"UNITED STATES MINOR OUTLYING ISLANDS\": \"UM\", \"URUGUAY\": \"UY\", \"UZBEKISTAN\": \"UZ\", \"VANUATU\": \"VU\", \"VATICAN CITY STATE (HOLY SEE)\": \"VA\", \"VENEZUELA\": \"VE\", \"VIET NAM\": \"VN\", \"VIRGIN ISLANDS (BRITISH)\": \"VG\", \"VIRGIN ISLANDS (U.S.)\": \"VI\", \"WALLIS AND FUTUNA\": \"WF\", \"WESTERN SAHARA\": \"EH\", \"YEMEN\": \"YE\", \"ZAMBIA\": \"ZM\", \"ZIMBABWE\": \"ZW\", \"ÅLAND ISLANDS\": \"AX\" }\n\nvar countries_enum = Object.keys(countries).map(function(k, index) {\n  return { const: k, title: countries[k] }\n});\n\nexport default countries;\n","import countries from './countries.js';\n\nconst person_items = {\n  type: 'object',\n  properties: {\n    givenName:              { type: 'string', title: 'First name' },\n    surName:                { type: 'string', title: 'Surname' },\n    electronicMailAddress:  { type: 'string', title: 'Email' },\n    positionName:           { type: 'string' },\n    organizationName:       { type: 'string' },\n    city:                   { type: 'string' },\n    country:                { type: 'string', enum: Object.keys(countries), description: 'Countries, territories, and islands are based on the ISO 3166-1 standard.' },\n    userId:                 { type: 'string', title: 'ORCID' }\n  }\n}\n\nvar schema = {\n  type: 'object',\n  properties: {\n    title: { type: 'string', title: 'Dataset title' },\n    abstract: {\n      type: 'string',\n      title: 'Description',\n      description: 'A brief overview of the resource that is being documented broken into paragraphs.'\n    },\n    creator: {\n      type: 'array',\n      title: 'Creator(s) - those who created the resource, in priority order.',\n      items: person_items\n    },\n    contact: {\n      type: 'array',\n      title: 'Contact(s) - curators of the resource who should be contacted for more information or to fix data problems.',\n      items: person_items\n    },\n    metadataProvider: {\n      type: 'array',\n      title: 'Metadata Provider(s) - those responsible for producing the resource metadata.',\n      items: person_items\n    },\n    associatedParty: {\n      type: 'array',\n      title: 'Associated person(s) - others associated with the resource.',\n      items: person_items\n    },\n    geographicCoverage: {\n      type: 'object',\n      properties: {\n        westBoundingCoordinate:   { type: 'string', title: 'West' },\n        eastBoundingCoordinate:   { type: 'string', title: 'East' },\n        northBoundingCoordinate:  { type: 'string', title: 'North' },\n        southBoundingCoordinate:  { type: 'string', title: 'South' }\n      }\n    },\n    taxonomicCoverage: {\n      type: 'object',\n      properties: {\n        generalTaxonomicCoverage: { type: 'string' },\n        taxonomicClassification: {\n          type: 'array',\n          title: 'Specific taxon list (optional)',\n          items: {\n            type: 'object',\n            properties: {\n              taxonRankName: { type: 'string', title: 'Rank', enum: ['domain', 'kingdom', 'subkingdom', 'superphylum', 'phylum', 'subphylum', 'superclass', 'class', 'subclass', 'supercohort', 'cohort', 'subcohort', 'superorder', 'order', 'suborder', 'infraorder', 'superfamily', 'family', 'subfamily', 'tribe', 'subtribe', 'supragenericname', 'genus', 'subgenus', 'section', 'subsection', 'series', 'subseries', 'speciesAggregate', 'infragenericname', 'species', 'subspecificAggregate', 'infraspecificname', 'subspecies', 'infrasubspecificname', 'variety', 'subvariety', 'form', 'subform', 'pathovar', 'biovar', 'chemovar', 'morphovar', 'phagovar', 'serovar', 'chemoform', 'formaspecialis', 'cultivarGroup', 'cultivar', 'strain', 'informal', 'unranked'] },\n              taxonRankValue: { type: 'string', title: 'Scientific name' },\n              commonName: { type: 'string' },\n            }\n          }\n        }\n      }\n    },\n    /*temporalCoverage: {\n      type: 'object',\n      definitions: {\n        singleDateTimeNested: {\n          type: 'object',\n          properties: {\n            singleDateTime: {\n              type: 'object',\n              title: 'Single date',\n              properties: { calendarDate: { type: 'string', format: 'date' } }\n            }\n          }\n        },\n        rangeOfDates:   {\n          type: 'object',\n          title: '- or Date range',\n          properties: {\n            beginDate: {\n              type: 'object',\n              title: '',\n              properties: { calendarDate: { type: 'string', format: 'date', title: 'Begin' } }\n            },\n            endDate: {\n              type: 'object',\n              title: '',\n              properties: { calendarDate: { type: 'string', format: 'date', title: 'End' } }\n            }\n          }\n        },\n\n      },\n      properties: {\n        temporalCoverage: {\n          oneOf: [\n            { \"$ref\": \"#/properties/temporalCoverage/definitions/singleDateTimeNested\" },\n            { \"$ref\": \"#/properties/temporalCoverage/definitions/rangeOfDates\" },\n            { \"$ref\": \"#/properties/additionalMetadata/properties/formationPeriod\" },\n            { \"$ref\": \"#/properties/additionalMetadata/properties/livingTimePeriod\" }\n          ]\n        }\n      }\n    },*/\n    singleDateTime: {\n      type: 'object',\n      properties: { calendarDate: { type: 'string', format: 'date', title: ' - or Single Date' } }\n    },\n    rangeOfDates:   {\n      type: 'object',\n      properties: {\n        beginDate: {\n          type: 'object',\n          properties: { calendarDate: { type: 'string', format: 'date', title: 'Begin' } }\n        },\n        endDate: {\n          type: 'object',\n          properties: { calendarDate: { type: 'string', format: 'date', title: 'End' } }\n        }\n      }\n    },\n    additionalMetadata: {\n      type: 'object',\n      properties: {\n        formationPeriod: { type: 'string', title: ' - or Formation Period' },\n        livingTimePeriod: { type: 'string', title: ' - or Living Time Period' }\n      }\n    },\n    project: {\n      type: 'object',\n      properties: {\n        title: { type: 'string' },\n        abstract: { type: 'string' },\n        funding: { type: 'string' }\n      }\n    },\n    keywordSet: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          keywordThesaurus: { type: 'string', description: 'A name for the keyword thesaurus/vocabulary from which the keywords were derived. Keyword thesauri are usually discipline-specific and can be custom or official. If the keywords are not drawn from a specific thesaurus or vocabulary, enter \"na\". Example(s): \"IRIS keyword thesaurus\"' },\n          keyword: { type: 'string', title: 'Keyword List' }\n        }\n      }\n    },\n    methodStep: { type: 'array', items: { type: 'object', properties: { description: { type: 'string'} } } },\n    studyExtent: { type: 'string'},\n    samplingDescription: { type: 'string'},\n    qualityControl: { type: 'string'},\n    //citation: { type: 'string' },\n    //citation__identifier: { type: 'string' },\n    bibliography: { type: 'array', items: {\n      type: 'object',\n      properties: {\n        citation: { type: 'string'},\n        citation__identifier: { type: 'string' }\n      },\n      required: ['citation', 'citation__identifier']\n    } },\n    collection: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          collectionName: { type: 'string' },\n          collectionIdentifier:  { type: 'string' },\n          parentCollectionIdentifier: { type: 'string' }\n        }\n      }\n    },\n    specimenPreservationMethod: { type: 'array', items: { type: 'string', enum: ['noTreatment', 'alcohol', 'deepFrozen', 'dried', 'driedAndPressed', 'formalin', 'refrigerated', 'freezeDried-dried', 'glycerin', 'gumArabic', 'microscopicPreparation', 'mounted', 'pinned', 'other'] } },\n    jgtiCuratorialUnit: {\n      type: 'array',\n      title: ' Curatorial Units - count range',\n      items: {\n        type: 'object',\n        properties: {\n          beginRange:  { type: 'string', format: 'date' },\n          endRange: { type: 'string', format: 'date' }\n        }\n      }\n    },\n    online: { type: 'object', properties: { url: { type: 'string', title: 'Resource Homepage' } } },\n    physical: {\n      type: 'array',\n      title: 'Other Data Formats',\n      items: {\n        type: 'object',\n        properties: {\n          objectName: { type: 'string', title: 'Name' },\n          characterEncoding:  { type: 'string' },\n          formatName: { type: 'string' },\n          formatVersion: { type: 'string' },\n          url: { type: 'string' }\n        }\n      }\n    },\n    purpose: { type: 'string' },\n    maintenance: {\n      type: 'object',\n      properties: { description: { type: 'string', title: 'Maintenance' } }\n    },\n    additionalInfo: { type: 'string' },\n    alternateIdentifier: { type: 'array', title: 'Alternative Identifier(s)', items: { type: 'string' } }\n  },\n  //required: ['title', 'abstract', 'creator', 'contact']\n};\n\nexport default schema;\n","var uischema = {\n  type: 'Categorization',\n  elements: [\n    { type: 'Category', label: 'Basic metadata', elements: [\n      { type: 'VerticalLayout', elements: [\n        { type: 'Control', scope: '#/properties/title' },\n        { type: 'Control', scope: '#/properties/abstract', options: { multi: true } }\n      ]},\n      { type: 'HorizontalLayout', elements: [{ type: 'Control', scope: '#/properties/creator' }] },\n      { type: 'HorizontalLayout', elements: [{ type: 'Control', scope: '#/properties/contact' }] },\n      { type: 'HorizontalLayout', elements: [{ type: 'Control', scope: '#/properties/metadataProvider' }] },\n      { type: 'HorizontalLayout', elements: [{ type: 'Control', scope: '#/properties/associatedParty' }] }\n    ]},\n    { type: 'Category', label: 'Coverage', elements: [\n      { type: 'Group', label: 'Geographic Coverage', elements: [\n        { type: 'HorizontalLayout', elements: [\n          { type: 'Control', scope: '#/properties/geographicCoverage/properties/northBoundingCoordinate' },\n          { type: 'Control', scope: '#/properties/geographicCoverage/properties/southBoundingCoordinate' },\n          { type: 'Control', scope: '#/properties/geographicCoverage/properties/eastBoundingCoordinate' },\n          { type: 'Control', scope: '#/properties/geographicCoverage/properties/westBoundingCoordinate' }\n        ] }\n      ]},\n      { type: 'HorizontalLayout', elements: [{ type: 'Control', scope: '#/properties/taxonomicCoverage' }] },\n      //{ type: 'HorizontalLayout', elements: [{ type: 'Control', scope: '#/properties/temporalCoverage' }] },\n      { type: 'Group', label: 'Temporal Coverage', elements: [\n        { type: 'HorizontalLayout', elements: [\n          { type: 'Group', label: 'Date range', elements: [\n            { type: 'Control', scope: '#/properties/rangeOfDates/properties/beginDate/properties/calendarDate' },\n            { type: 'Control', scope: '#/properties/rangeOfDates/properties/endDate/properties/calendarDate' }\n          ]},\n          { type: 'Control', scope: '#/properties/singleDateTime/properties/calendarDate' },\n          { type: 'Control', scope: '#/properties/additionalMetadata/properties/formationPeriod' },\n          { type: 'Control', scope: '#/properties/additionalMetadata/properties/livingTimePeriod' }\n        ]}\n      ]}\n    ]},\n    { type: 'Category', label: 'Project data', elements: [\n      { type: 'Control', scope: '#/properties/project/properties/title' },\n      { type: 'Control', scope: '#/properties/project/properties/abstract', options: { multi: true } },\n      { type: 'Control', scope: '#/properties/project/properties/funding', options: { multi: true } },\n      //{ type: 'ListWithDetail', scope: '#/properties/keywordSet' }\n      { type: 'HorizontalLayout', elements: [{ type: 'Control', scope: '#/properties/keywordSet' }] }\n    ]},\n    { type: 'Category', label: 'Sampling methods', elements: [\n      { type: 'Control', scope: '#/properties/studyExtent' },\n      { type: 'Control', scope: '#/properties/samplingDescription' },\n      { type: 'Control', scope: '#/properties/qualityControl' },\n      { type: 'Control', scope: '#/properties/methodStep' }\n    ] },\n    { type: 'Category', label: 'Citations', elements: [\n      //{ type: 'Control', scope: '#/properties/citation', options: { multi: true } },\n      //{ type: 'Control', scope: '#/properties/citation__identifier' },\n      { type: 'HorizontalLayout', elements: [{ type: 'Control', scope: '#/properties/bibliography' }] }\n    ] },\n    { type: 'Category', label: 'Collection data', elements: [\n      { type: 'Control', scope: '#/properties/collection' },\n      { type: 'Control', scope: '#/properties/specimenPreservationMethod' },\n      { type: 'Control', scope: '#/properties/jgtiCuratorialUnit' },\n    ] },\n    { type: 'Category', label: 'External links', elements: [\n      { type: 'Control', scope: '#/properties/online/properties/url' },\n      { type: 'Control', scope: '#/properties/physical' },\n    ] },\n    { type: 'Category', label: 'Additional metadata', elements: [\n      { type: 'Control', scope: '#/properties/purpose' },\n      { type: 'Control', scope: '#/properties/maintenance/properties/description' },\n      { type: 'Control', scope: '#/properties/additionalInfo' },\n      { type: 'Control', scope: '#/properties/alternateIdentifier' }\n    ] }\n  ],\n  options: {\n    variant: 'stepper',\n    showNavButtons: true\n  }\n}\n\nexport default uischema;\n","import React from 'react';\nimport { useState } from 'react';\n\ninterface RatingProps {\n  id?: string;\n  value: number;\n  updateValue: (newValue: number) => void;\n}\n\nexport const Rating: React.FC<RatingProps> = ({ id, value, updateValue }) => {\n  const [hoverAt, setHoverAt] = useState<number | null>(null);\n\n  return (\n    <div id='#/properties/rating' className='rating'>\n      <p>Rating:</p>\n      <span style={{ cursor: 'pointer' }}>\n        {[0, 1, 2, 3, 4].map((i) => {\n          const fullStars = hoverAt ?? value;\n\n          return (\n            <span\n              onMouseOver={() => setHoverAt(i + 1)}\n              onMouseOut={() => setHoverAt(null)}\n              onClick={() => updateValue(i + 1)}\n              key={`${id}_${i}`}\n            >\n              {i < fullStars ? '\\u2605' : '\\u2606'}\n            </span>\n          );\n        })}\n      </span>\n    </div>\n  );\n};\n","import { withJsonFormsControlProps } from '@jsonforms/react';\nimport { Rating } from './Rating';\n\ninterface RatingControlProps {\n  data: any;\n  handleChange(path: string, value: any): void;\n  path: string;\n}\n\nconst RatingControl = ({ data, handleChange, path }: RatingControlProps) => (\n  <Rating\n    value={data}\n    updateValue={(newValue: number) => handleChange(path, newValue)}\n  />\n);\n\nexport default withJsonFormsControlProps(RatingControl);\n","import { rankWith, scopeEndsWith } from '@jsonforms/core';\n\nexport default rankWith(\n  3, //increase rank as needed\n  scopeEndsWith('rating')\n);\n","import emlTemplate from './eml-blank.xml.js';\nimport countries from './countries.js';\n\nconst Seek = (nodeKey, nodeValue, parentNode, identifier_attribute = '') => {\n  var node = parentNode.querySelector(nodeKey);\n  if (typeof nodeValue == 'string') {\n    if(nodeKey == 'country') { nodeValue = countries[nodeValue]; };\n    if(nodeKey == 'abstract') { // This needs to be improved\n      nodeValue = '<para>' + nodeValue.split('\\n').join('</para><para>') + '</para>';\n    }\n    node.innerHTML = nodeValue;\n    if (identifier_attribute) { node.setAttribute('identifier', identifier_attribute); }\n  }\n  else if (Array.isArray(nodeValue)) {\n    const emptyNodeTemplate = node.cloneNode(true);\n\n    for (const [k, v] of Object.entries(nodeValue)) {\n      if (k !== '0') { // Make new nodes for many to one\n        const newSiblingNode = (emptyNodeTemplate.cloneNode(true) as HTMLElement);\n        node = node.parentNode.insertBefore(newSiblingNode, node.nextSibling);\n      }\n\n      if (typeof v == 'string') { node.innerHTML = v; }\n      else {\n        const entries = Object.entries(v);\n\n        // Special object with node attributes:\n        if (entries.length == 2 && entries[1][0].includes('__identifier')) {\n          Seek(entries[0][0], entries[0][1], node, String(entries[1][1]));\n        }\n        // Normal object\n        else {\n          for (const [label, item] of entries) {\n            Seek(label, item, node);\n          }\n        }\n      }\n    }\n  }\n  else if (typeof nodeValue == 'object') {\n    for (const [k, v] of Object.entries(nodeValue)) {\n      var newNode = node.querySelector(k);\n      if (newNode) { Seek(k, v, newNode.parentNode); }\n    }\n  }\n}\n\nconst MakePopulatedEML = (jsonformsData) => {\n  const parser = new DOMParser();\n  var emlDoc = parser.parseFromString(emlTemplate, \"text/xml\");\n  console.log(jsonformsData);\n\n  for (const [fieldKey, fieldValue] of Object.entries(jsonformsData)) {\n    Seek(fieldKey, fieldValue, emlDoc.querySelector('eml'));\n  }\n\n  var XMLS = new XMLSerializer();\n  var inp_xmls = XMLS.serializeToString(emlDoc);\n  return inp_xmls.replace('<eml ', '<eml:eml ').replace('</eml', '</eml:eml');\n};\n\nexport default MakePopulatedEML;\n","var emlTemplate = `<eml xmlns:eml=\"eml://ecoinformatics.org/eml-2.1.1\" xmlns:dc=\"http://purl.org/dc/terms/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"eml://ecoinformatics.org/eml-2.1.1 http://rs.gbif.org/schema/eml-gbif-profile/1.1/eml.xsd\" packageId=\"https://ipt.gbif.no/resource?id=test/v1.1\" system=\"http://gbif.org\" scope=\"system\" xml:lang=\"eng\">\n   <dataset>\n      <alternateIdentifier />\n      <title xml:lang=\"eng\" />\n      <creator>\n         <individualName>\n            <givenName />\n            <surName />\n         </individualName>\n         <organizationName />\n         <positionName />\n         <address>\n            <deliveryPoint />\n            <city />\n            <administrativeArea />\n            <postalCode />\n            <country />\n         </address>\n         <phone />\n         <electronicMailAddress />\n         <onlineUrl />\n         <userId directory=\"http://orcid.org/\" />\n      </creator>\n      <metadataProvider>\n         <individualName>\n            <givenName />\n            <surName />\n         </individualName>\n         <organizationName />\n         <positionName />\n         <address>\n            <deliveryPoint />\n            <city />\n            <administrativeArea />\n            <postalCode />\n            <country />\n         </address>\n         <phone />\n         <electronicMailAddress />\n         <onlineUrl />\n         <userId directory=\"http://orcid.org/\" />\n      </metadataProvider>\n      <associatedParty>\n         <individualName>\n            <givenName />\n            <surName />\n         </individualName>\n         <organizationName />\n         <positionName />\n         <address>\n            <deliveryPoint />\n            <city />\n            <administrativeArea />\n            <postalCode />\n            <country />\n         </address>\n         <phone />\n         <electronicMailAddress />\n         <onlineUrl />\n         <userId directory=\"http://orcid.org/\" />\n         <role />\n      </associatedParty>\n      <pubDate />\n      <language />\n      <abstract>\n         <para />\n      </abstract>\n      <keywordSet>\n         <keyword />\n         <keywordThesaurus />\n      </keywordSet>\n      <additionalInfo>\n         <para />\n      </additionalInfo>\n      <intellectualRights>\n         <para>\n            This work is licensed under a\n            <ulink url=\"http://creativecommons.org/licenses/by/4.0/legalcode\">\n               <citetitle>Creative Commons Attribution (CC-BY) 4.0 License</citetitle>\n            </ulink>.\n         </para>\n      </intellectualRights>\n      <distribution scope=\"document\">\n         <online>\n            <url function=\"information\" />\n         </online>\n      </distribution>\n      <coverage>\n         <geographicCoverage>\n            <geographicDescription />\n            <boundingCoordinates>\n               <westBoundingCoordinate />\n               <eastBoundingCoordinate />\n               <northBoundingCoordinate />\n               <southBoundingCoordinate />\n            </boundingCoordinates>\n         </geographicCoverage>\n         <temporalCoverage>\n            <singleDateTime>\n               <calendarDate />\n            </singleDateTime>\n         </temporalCoverage>\n         <temporalCoverage>\n            <rangeOfDates>\n              <beginDate>\n                <calendarDate />\n              </beginDate>\n              <endDate>\n                <calendarDate />\n              </endDate>\n            </rangeOfDates>\n         </temporalCoverage>\n         <taxonomicCoverage>\n            <generalTaxonomicCoverage />\n            <taxonomicClassification>\n               <taxonRankName />\n               <taxonRankValue />\n               <commonName />\n            </taxonomicClassification>\n         </taxonomicCoverage>\n      </coverage>\n      <purpose>\n         <para />\n      </purpose>\n      <maintenance>\n         <description>\n            <para />\n         </description>\n         <maintenanceUpdateFrequency />\n      </maintenance>\n      <contact>\n         <individualName>\n            <givenName />\n            <surName />\n         </individualName>\n         <organizationName />\n         <positionName />\n         <address>\n            <deliveryPoint />\n            <city />\n            <administrativeArea />\n            <postalCode />\n            <country />\n         </address>\n         <phone />\n         <electronicMailAddress />\n         <onlineUrl />\n         <userId directory=\"http://orcid.org/\" />\n      </contact>\n      <methods>\n         <methodStep>\n            <description>\n               <para />\n            </description>\n         </methodStep>\n         <sampling>\n            <studyExtent>\n               <description>\n                  <para />\n               </description>\n            </studyExtent>\n            <samplingDescription>\n               <para />\n            </samplingDescription>\n         </sampling>\n         <qualityControl>\n            <description>\n               <para />\n            </description>\n         </qualityControl>\n      </methods>\n      <project>\n         <title />\n         <personnel>\n            <individualName>\n               <givenName />\n               <surName />\n            </individualName>\n            <userId directory=\"\" />\n            <role />\n         </personnel>\n         <abstract>\n            <para />\n         </abstract>\n         <funding>\n            <para />\n         </funding>\n         <studyAreaDescription>\n            <descriptor name=\"generic\" citableClassificationSystem=\"false\">\n               <descriptorValue />\n            </descriptor>\n         </studyAreaDescription>\n         <designDescription>\n            <description>\n               <para />\n            </description>\n         </designDescription>\n      </project>\n   </dataset>\n   <additionalMetadata>\n      <metadata>\n         <gbif>\n            <dateStamp />\n            <hierarchyLevel>dataset</hierarchyLevel>\n            <citation identifier=\"\" />\n            <bibliography>\n              <citation identifier=\"\" />\n            </bibliography>\n            <physical>\n               <objectName />\n               <characterEncoding />\n               <dataFormat>\n                  <externallyDefinedFormat>\n                     <formatName />\n                     <formatVersion />\n                  </externallyDefinedFormat>\n               </dataFormat>\n               <distribution>\n                  <online>\n                     <url function=\"download\" />\n                  </online>\n               </distribution>\n            </physical>\n            <resourceLogoUrl />\n            <collection>\n               <parentCollectionIdentifier />\n               <collectionIdentifier />\n               <collectionName />\n            </collection>\n            <formationPeriod />\n            <specimenPreservationMethod />\n            <livingTimePeriod />\n            <jgtiCuratorialUnit>\n               <jgtiUnitType>countrange</jgtiUnitType>\n               <jgtiUnitRange>\n                  <beginRange />\n                  <endRange />\n               </jgtiUnitRange>\n            </jgtiCuratorialUnit>\n            <dc:replaces />\n         </gbif>\n      </metadata>\n   </additionalMetadata>\n</eml>`;\n\nexport default emlTemplate ;\n","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport MakePopulatedEML from './MakePopulatedEML';\n\ninterface Props {\n  jsonformsData: object;\n}\n\nconst MakeEMLButton: React.FC<Props> = ({ jsonformsData }) => {\n  const downloadEML = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([MakePopulatedEML(jsonformsData)], { type: 'text/plain' });\n    element.href = URL.createObjectURL(file);\n    element.download = \"eml.xml\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  };\n\n  return (\n    <Button onClick={downloadEML} color='primary' variant='contained'>\n      Download EML\n    </Button>\n  );\n}\n\nexport default MakeEMLButton;\n","var initialData = {\n  \"title\": \"Dataset title\",\n  \"abstract\": \"Dataset description\",\n  \"creator\": [\n    {\n      \"givenName\": \"creator first name 1\",\n      \"surName\": \"creator surname 1\",\n      \"electronicMailAddress\": \"creator email 1\",\n      \"positionName\": \"creator pos 1\",\n      \"organizationName\": \"creator org 1\",\n      \"city\": \"creator city 1\",\n      \"country\": \"ANGOLA\",\n      \"userId\": \"creator orcid 1\"\n    },\n    {\n      \"electronicMailAddress\": \"creator email 2\",\n      \"userId\": \"creator orcid 2\"\n    },\n    {\n      \"electronicMailAddress\": \"creator email 3\",\n      \"organizationName\": \"creator org 3\"\n    }\n  ],\n  \"metadataProvider\": [],\n  \"contact\": [\n    {\n      \"givenName\": \"contact first name 1\",\n      \"surName\": \"contact surname 1\",\n      \"electronicMailAddress\": \"contact email 1\",\n      \"positionName\": \"contact pos 1\",\n      \"organizationName\": \"contact org 1\",\n      \"city\": \"contact city 1\",\n      \"country\": \"BOTSWANA\",\n      \"userId\": \"contact orcid 1\"\n    }\n  ],\n  \"associatedParty\": [\n    {\n      \"givenName\": \"assoc first name 1\",\n      \"surName\": \"assoc surname 1\",\n      \"electronicMailAddress\": \"assoc email 1\",\n      \"positionName\": \"assoc pos 1\",\n      \"organizationName\": \"assoc org 1\",\n      \"city\": \"assoc city 1\",\n      \"country\": \"NORWAY\",\n      \"userId\": \"assoc orcid 1\"\n    },\n    {\n      \"electronicMailAddress\": \"assoc email 2\",\n      \"userId\": \"assoc orcid 2\"\n    }\n  ],\n  \"geographicCoverage\": {\n    \"northBoundingCoordinate\": \"11.1\",\n    \"southBoundingCoordinate\": \"22.2\",\n    \"eastBoundingCoordinate\": \"33.3\",\n    \"westBoundingCoordinate\": \"44.4\"\n  },\n  \"taxonomicCoverage\": {\n    \"generalTaxonomicCoverage\": \"General taxonomic coverage text\",\n    \"taxonomicClassification\": [\n      {\n        \"taxonRankName\": \"species\",\n        \"taxonRankValue\": \"Eudyptes moseleyi\",\n        \"commonName\": \"Northern rockhopper penguin\"\n      },\n      {\n        \"taxonRankName\": \"family\",\n        \"taxonRankValue\": \"Asteracae\"\n      }\n    ]\n  },\n  \"rangeOfDates\": {\n    \"beginDate\": {\n      \"calendarDate\": \"2021-12-01\"\n    },\n    \"endDate\": {\n      \"calendarDate\": \"2021-12-02\"\n    }\n  },\n  \"singleDateTime\": {\n    \"calendarDate\": \"2021-12-03\"\n  },\n  \"additionalMetadata\": {\n    \"formationPeriod\": \"Formation period value\",\n    \"livingTimePeriod\": \"Living time period value\"\n  },\n  \"project\": {\n    \"title\": \"Project title\",\n    \"abstract\": \"Project abstract\",\n    \"funding\": \"Project funding\"\n  },\n  \"keywordSet\": [\n    {\n      \"keywordThesaurus\": \"thesaurus1\",\n      \"keyword\": \"keyword1\"\n    },\n    {\n      \"keywordThesaurus\": \"thesaurus2\",\n      \"keyword\": \"keyword2\"\n    },\n    {\n      \"keywordThesaurus\": \"thesaurus3\",\n      \"keyword\": \"keyword3\"\n    }\n  ],\n  \"studyExtent\": \"Study extent\",\n  \"samplingDescription\": \"Sampling description\",\n  \"qualityControl\": \"qc\",\n  \"methodStep\": [\n    {\n      \"description\": \"method step 1\"\n    },\n    {\n      \"description\": \"method step 2\"\n    },\n    {\n      \"description\": \"method step 3\"\n    }\n  ],\n  \"bibliography\": [\n    {\n      \"citation\": \"bib citation 1\",\n      \"citation__identifier\": \"bib citation 1 id\"\n    },\n    {\n      \"citation\": \"bib citation 2\",\n      \"citation__identifier\": \"bib citation 2 id\"\n    }\n  ],\n  \"collection\": [\n    {\n      \"collectionName\": \"collection name 1\",\n      \"collectionIdentifier\": \"collection id 1\",\n      \"parentCollectionIdentifier\": \"parent collection id 1\"\n    },\n    {\n      \"collectionIdentifier\": \"collection id 2\",\n      \"parentCollectionIdentifier\": \"parent collection id 2\"\n    }\n  ],\n  \"specimenPreservationMethod\": [\n    \"alcohol\",\n    \"gumArabic\"\n  ],\n  \"jgtiCuratorialUnit\": [\n    {\n      \"beginRange\": \"2021-12-30\",\n      \"endRange\": \"2021-12-31\"\n    }\n  ],\n  \"online\": {\n    \"url\": \"homepage.com\"\n  },\n  \"physical\": [\n    {\n      \"objectName\": \"Zenodo\",\n      \"characterEncoding\": \"utf8\",\n      \"formatName\": \"excel\",\n      \"formatVersion\": \"1\",\n      \"url\": \"zenodo.com\"\n    },\n    {\n      \"formatName\": \"csv\",\n      \"url\": \"zenodo.com/new\"\n    }\n  ],\n  \"purpose\": \"Additional metadata purpose\",\n  \"maintenance\": {\n    \"description\": \"Additional metadata maintenance\"\n  },\n  \"additionalInfo\": \"Additional metadata info\",\n  \"alternateIdentifier\": [\n    \"alternative identifier 1\",\n    \"alternative identifier 2\",\n    \"alternative identifier 3\"\n  ]\n};\n\nexport default initialData;\n","import { Fragment, useState } from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport Grid from '@material-ui/core/Grid';\nimport './App.css';\nimport schema from './schema.js';\nimport uischema from './uischema.js';\nimport {\n  materialCells,\n  materialRenderers,\n} from '@jsonforms/material-renderers';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MakeEMLButton from './MakeEMLButton';\nimport initialDataSeed from './initialData.js';\n\n\nconst useStyles = makeStyles((_theme) => ({\n  container: {\n    padding: '0em 4em 1em 4em',\n    width: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    padding: '0.25em',\n  },\n  dataContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    borderRadius: '0.25em',\n    backgroundColor: '#cecece',\n    marginBottom: '1rem',\n  },\n  resetButton: {\n    margin: 'auto',\n    display: 'block',\n  },\n  demoform: {\n    margin: 'auto',\n    padding: '1rem',\n  }\n}));\n\nconst initialData = initialDataSeed;\n\nconst renderers = [\n  ...materialRenderers,\n  //register custom renderers\n  { tester: ratingControlTester, renderer: RatingControl },\n];\n\nconst App = () => {\n  const classes = useStyles();\n  const [jsonformsData, setJsonformsData] = useState<any>(initialData);\n\n  return (\n    <Fragment>\n      <div className='App'>\n        <header className='App-header'>\n          <h1 className='App-title'>\n            EML generator\n          </h1>\n          <p className='App-intro'>Fill in metadata in English. More detail = better findability = more citations.</p>\n        </header>\n      </div>\n\n      <Grid\n        container\n        justify={'center'}\n        spacing={1}\n        className={classes.container}\n      >\n        <Grid item sm={12}>\n          <div className={classes.demoform}>\n            <JsonForms\n              schema={schema}\n              uischema={uischema}\n              data={jsonformsData}\n              renderers={renderers}\n              cells={materialCells}\n              onChange={({ errors, data }) => setJsonformsData(data)}\n            />\n          </div>\n          <MakeEMLButton jsonformsData={jsonformsData} />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { createMuiTheme, CssBaseline, ThemeProvider } from '@material-ui/core';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n/**\n * Customize form so each control has more space\n */\nconst theme = createMuiTheme({\n  overrides: {\n    MuiFormControl: {\n      root: {\n        margin: '0.8em 0',\n      },\n    },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
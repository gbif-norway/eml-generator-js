{"version":3,"sources":["schema.js","uischema.js","Rating.tsx","RatingControl.tsx","ratingControlTester.ts","MakePopulatedEML.tsx","eml-blank.xml.js","MakeEMLButton.tsx","App.tsx","index.tsx"],"names":["schema","type","properties","title","abstract","description","creator","items","givenName","surName","electronicMailAddress","positionName","organizationName","city","country","userId","contact","metadataProvider","associatedParty","geographicCoverage","westBoundingCoordinate","eastBoundingCoordinate","northBoundingCoordinate","southBoundingCoordinate","taxonomicCoverage","generalTaxonomicCoverage","taxonomicClassification","taxonRankName","enum","taxonRankValue","commonName","singleDateTime","calendarDate","format","rangeOfDates","beginDate","endDate","additionalMetadata","formationPeriod","livingTimePeriod","project","funding","keywordSet","keywordThesaurus","keyword","methodStep","studyExtent","samplingDescription","qualityControl","citation","citation__identifier","bibliography","collection","collectionName","collectionIdentifier","parentCollectionIdentifier","specimenPreservationMethod","jgtiCuratorialUnit","jgtiUnitType","beginRange","endRange","online","url","physical","objectName","characterEncoding","formatName","formatVersion","purpose","maintenance","additionalInfo","alternateIdentifier","required","uischema","elements","label","scope","options","multi","variant","showNavButtons","Rating","id","value","updateValue","useState","hoverAt","setHoverAt","className","style","cursor","map","i","fullStars","onMouseOver","onMouseOut","onClick","withJsonFormsControlProps","data","handleChange","path","newValue","rankWith","scopeEndsWith","Seek","nodeKey","nodeValue","parentNode","node","querySelector","console","log","innerHTML","Array","isArray","emptyNodeTemplate","cloneNode","Object","entries","k","v","newSiblingNode","insertBefore","nextSibling","newNode","MakePopulatedEML","jsonformsData","emlDoc","DOMParser","parseFromString","fieldKey","fieldValue","inp_xmls","XMLSerializer","serializeToString","MakeEMLButton","Button","element","document","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","color","useStyles","makeStyles","_theme","container","padding","width","textAlign","dataContent","display","justifyContent","borderRadius","backgroundColor","marginBottom","resetButton","margin","demoform","initialData","renderers","materialRenderers","tester","ratingControlTester","renderer","RatingControl","App","classes","setJsonformsData","Grid","justify","spacing","item","sm","cells","materialCells","onChange","errors","theme","createMuiTheme","overrides","MuiFormControl","root","ReactDOM","render","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.5355c34f.chunk.js","sourcesContent":["var schema = {\n  type: 'object',\n  properties: {\n    title: { type: 'string', title: 'Dataset title' },\n    abstract: { type: 'string', title: 'Description', description: 'A brief overview of the resource that is being documented broken into paragraphs.' },\n    creator: {\n      type: 'array',\n      title: 'Creator(s) - those who created the resource, in priority order.',\n      items: {\n        type: 'object',\n        properties: {\n          givenName:              { type: 'string', title: 'First name' },\n          surName:                { type: 'string', title: 'Surname' },\n          electronicMailAddress:  { type: 'string', title: 'Email' },\n          //phone:                  { type: 'string' },\n          positionName:           { type: 'string' },\n          organizationName:       { type: 'string' },\n          //deliveryPoint:          { type: 'string', title: 'Address' },\n          city:                   { type: 'string' },\n          //administrativeArea:     { type: 'string', title: 'State/Province' },\n          country:                { type: 'string', description: 'Countries, territories, and islands are based on the ISO 3166-1 standard.'},\n          //postalCode:             { type: 'string' },\n          //onlineUrl:              { type: 'string', title: 'Home Page' },\n          //userId__directory:      { type: 'string' },\n          userId:                 { type: 'string', title: 'ORCID' }\n        }\n      }\n    },\n    contact: {\n      type: 'array',\n      title: 'Contact(s) - curators of the resource who should be contacted for more information or to fix data problems.',\n      items: {\n        type: 'object',\n        properties: {\n          givenName:              { type: 'string', title: 'First name' },\n          surName:                { type: 'string', title: 'Surname' },\n          electronicMailAddress:  { type: 'string', title: 'Email' },\n          positionName:           { type: 'string', title: 'Position' },\n          organizationName:       { type: 'string', title: 'Organisation' },\n          city:                   { type: 'string' },\n          country:                { type: 'string', description: 'Countries, territories, and islands are based on the ISO 3166-1 standard.'},\n          userId:                 { type: 'string', title: 'ORCID' }\n        }\n      }\n    },\n    metadataProvider: {\n      type: 'array',\n      title: 'Metadata Provider(s) - those responsible for producing the resource metadata.',\n      items: {\n        type: 'object',\n        properties: {\n          givenName:              { type: 'string', title: 'First name' },\n          surName:                { type: 'string', title: 'Surname' },\n          electronicMailAddress:  { type: 'string', title: 'Email' },\n          positionName:           { type: 'string', title: 'Position' },\n          organizationName:       { type: 'string', title: 'Organisation' },\n          city:                   { type: 'string' },\n          country:                { type: 'string', description: 'Countries, territories, and islands are based on the ISO 3166-1 standard.'},\n          userId:                 { type: 'string', title: 'ORCID' }\n        }\n      }\n    },\n    associatedParty: {\n      type: 'array',\n      title: 'Associated person(s) - others associated with the resource.',\n      items: {\n        type: 'object',\n        properties: {\n          givenName:              { type: 'string', title: 'First name' },\n          surName:                { type: 'string', title: 'Surname' },\n          electronicMailAddress:  { type: 'string', title: 'Email' },\n          positionName:           { type: 'string', title: 'Position' },\n          organizationName:       { type: 'string', title: 'Organisation' },\n          city:                   { type: 'string' },\n          country:                { type: 'string', description: 'Countries, territories, and islands are based on the ISO 3166-1 standard.'},\n          userId:                 { type: 'string', title: 'ORCID' }\n        }\n      }\n    },\n    geographicCoverage: {\n      type: 'object',\n      properties: {\n        westBoundingCoordinate:   { type: 'string', title: 'West' },\n        eastBoundingCoordinate:   { type: 'string', title: 'East' },\n        northBoundingCoordinate:  { type: 'string', title: 'North' },\n        southBoundingCoordinate:  { type: 'string', title: 'South' }\n      }\n    },\n    taxonomicCoverage: {\n      type: 'object',\n      properties: {\n        generalTaxonomicCoverage: { type: 'string' },\n        taxonomicClassification: {\n          type: 'array',\n          title: 'Specific taxon list (optional)',\n          items: {\n            type: 'object',\n            properties: {\n              taxonRankName: { type: 'string', title: 'Rank', enum: ['domain', 'kingdom', 'subkingdom', 'superphylum', 'phylum', 'subphylum', 'superclass', 'class', 'subclass', 'supercohort', 'cohort', 'subcohort', 'superorder', 'order', 'suborder', 'infraorder', 'superfamily', 'family', 'subfamily', 'tribe', 'subtribe', 'supragenericname', 'genus', 'subgenus', 'section', 'subsection', 'series', 'subseries', 'speciesAggregate', 'infragenericname', 'species', 'subspecificAggregate', 'infraspecificname', 'subspecies', 'infrasubspecificname', 'variety', 'subvariety', 'form', 'subform', 'pathovar', 'biovar', 'chemovar', 'morphovar', 'phagovar', 'serovar', 'chemoform', 'formaspecialis', 'cultivarGroup', 'cultivar', 'strain', 'informal', 'unranked'] },\n              taxonRankValue: { type: 'string', title: 'Scientific name' },\n              commonName: { type: 'string' },\n            }\n          }\n        }\n      }\n    },\n    singleDateTime: {\n      type: 'object',\n      properties: { calendarDate: { type: 'string', format: 'date', title: 'Single date' } }\n    },\n    rangeOfDates:   {\n      type: 'object',\n      properties: {\n        beginDate: {\n          type: 'object',\n          properties: { calendarDate: { type: 'string', format: 'date', title: 'Begin' } }\n        },\n        endDate: {\n          type: 'object',\n          properties: { calendarDate: { type: 'string', format: 'date', title: 'End' } }\n        }\n      }\n    },\n    additionalMetadata: {\n      type: 'object',\n      properties: {\n        formationPeriod: { type: 'string' },\n        livingTimePeriod: { type: 'string' }\n      }\n    },\n    project: {\n      type: 'object',\n      properties: {\n        title: { type: 'string' },\n        abstract: { type: 'string' },\n        funding: { type: 'string' }\n      }\n    },\n    keywordSet: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          keywordThesaurus: { type: 'string', description: 'A name for the keyword thesaurus/vocabulary from which the keywords were derived. Keyword thesauri are usually discipline-specific and can be custom or official. If the keywords are not drawn from a specific thesaurus or vocabulary, enter \"na\". Example(s): \"IRIS keyword thesaurus\"' },\n          keyword: { type: 'string', title: 'Keyword List' }\n        }\n      }\n    },\n    methodStep: { type: 'array', items: { type: 'object', properties: { description: { type: 'string'} } } },\n    studyExtent: { type: 'string'},\n    samplingDescription: { type: 'string'},\n    qualityControl: { type: 'string'},\n    citation: { type: 'string' },\n    citation__identifier: { type: 'string' },\n    bibliography: { type: 'array', items: {\n      type: 'object',\n      properties: {\n        citation: { type: 'string'},\n        citation__identifier: { type: 'string' }\n      }\n    } },\n    collection: {\n      type: 'array',\n      items: {\n        type: 'object',\n        properties: {\n          collectionName: { type: 'string' },\n          collectionIdentifier:  { type: 'string' },\n          parentCollectionIdentifier: { type: 'string' }\n        }\n      }\n    },\n    specimenPreservationMethod: { type: 'array', items: { type: 'string' } },\n    jgtiCuratorialUnit: {\n      type: 'array',\n      title: ' Curatorial Units',\n      items: {\n        type: 'object',\n        properties: {\n          jgtiUnitType: { type: 'string', title: 'Unit Type' },\n          beginRange:  { type: 'string', format: 'date' },\n          endRange: { type: 'string', format: 'date' }\n        }\n      }\n    },\n    online: { type: 'object', properties: { url: { type: 'string', title: 'Resource Homepage' } } },\n    physical: {\n      type: 'array',\n      title: 'Other Data Formats',\n      items: {\n        type: 'object',\n        properties: {\n          objectName: { type: 'string', title: 'Name' },\n          characterEncoding:  { type: 'string' },\n          formatName: { type: 'string' },\n          formatVersion: { type: 'string' },\n          url: { type: 'string' }\n        }\n      }\n    },\n    purpose: { type: 'string' },\n    maintenance: {\n      type: 'object',\n      properties: { description: { type: 'string', title: 'Maintenance' } }\n    },\n    additionalInfo: { type: 'string' },\n    alternateIdentifier: { type: 'array', title: 'Alternative Identifier(s)', items: { type: 'string' } }\n  },\n  required: ['title', 'abstract', 'creator', 'contact']\n};\n\nexport default schema;\n","var uischema = {\n  type: 'Categorization',\n  elements: [\n    { type: 'Category', label: 'Basic metadata', elements: [\n      { type: 'VerticalLayout', elements: [\n        { type: 'Control', scope: '#/properties/title' },\n        { type: 'Control', scope: '#/properties/abstract', options: { multi: true } }\n      ]},\n      { type: 'HorizontalLayout', elements: [{ type: 'Control', scope: '#/properties/creator' }] },\n      { type: 'HorizontalLayout', elements: [{ type: 'Control', scope: '#/properties/contact' }] },\n      { type: 'HorizontalLayout', elements: [{ type: 'Control', scope: '#/properties/metadataProvider' }] },\n      { type: 'HorizontalLayout', elements: [{ type: 'Control', scope: '#/properties/associatedParty' }] }\n    ]},\n    { type: 'Category', label: 'Coverage', elements: [\n      { type: 'Group', label: 'Geographic Coverage', elements: [\n        { type: 'HorizontalLayout', elements: [\n          { type: 'Control', scope: '#/properties/geographicCoverage/properties/northBoundingCoordinate' },\n          { type: 'Control', scope: '#/properties/geographicCoverage/properties/southBoundingCoordinate' },\n          { type: 'Control', scope: '#/properties/geographicCoverage/properties/eastBoundingCoordinate' },\n          { type: 'Control', scope: '#/properties/geographicCoverage/properties/westBoundingCoordinate' }\n        ] }\n      ]},\n      { type: 'HorizontalLayout', elements: [ { type: 'Control', scope: '#/properties/taxonomicCoverage' }] },\n      { type: 'Group', label: 'Temporal Coverage', elements: [\n        { type: 'HorizontalLayout', elements: [\n          { type: 'Control', scope: '#/properties/singleDateTime/properties/calendarDate' },\n          { type: 'Group', label: 'Date range', elements: [\n            {type: 'Control', scope: '#/properties/rangeOfDates/properties/beginDate/properties/calendarDate' },\n            {type: 'Control', scope: '#/properties/rangeOfDates/properties/endDate/properties/calendarDate' }\n          ]},\n          { type: 'Control', scope: '#/properties/additionalMetadata/properties/formationPeriod' },\n          { type: 'Control', scope: '#/properties/additionalMetadata/properties/livingTimePeriod' }\n        ]}\n      ]}\n    ]},\n    { type: 'Category', label: 'Project data', elements: [\n      { type: 'Control', scope: '#/properties/project' },\n      { type: 'ListWithDetail', scope: '#/properties/keywordSet' }\n      //{ type: 'HorizontalLayout', elements: [{ type: 'Control', scope: '#/properties/keywordSet' }] },\n    ]},\n    { type: 'Category', label: 'Sampling methods', elements: [\n      { type: 'Control', scope: '#/properties/studyExtent' },\n      { type: 'Control', scope: '#/properties/samplingDescription' },\n      { type: 'Control', scope: '#/properties/qualityControl' },\n      { type: 'Control', scope: '#/properties/methodStep' }\n    ] },\n    { type: 'Category', label: 'Citations', elements: [\n      { type: 'Control', scope: '#/properties/citation', options: { multi: true } },\n      { type: 'Control', scope: '#/properties/citation__identifier' },\n      { type: 'HorizontalLayout', elements: [{ type: 'Control', scope: '#/properties/bibliography' }] }\n    ] },\n    { type: 'Category', label: 'Collection data', elements: [\n      { type: 'Control', scope: '#/properties/collection' },\n      { type: 'Control', scope: '#/properties/specimenPreservationMethod' },\n      { type: 'Control', scope: '#/properties/jgtiCuratorialUnit' },\n    ] },\n    { type: 'Category', label: 'External links', elements: [\n      { type: 'Control', scope: '#/properties/online/properties/url' },\n      { type: 'Control', scope: '#/properties/physical' },\n    ] },\n    { type: 'Category', label: 'Additional metadata', elements: [\n      { type: 'Control', scope: '#/properties/purpose' },\n      { type: 'Control', scope: '#/properties/maintenance/properties/description' },\n      { type: 'Control', scope: '#/properties/additionalInfo' },\n      { type: 'Control', scope: '#/properties/alternateIdentifier' }\n    ] }\n  ],\n  options: {\n    variant: 'stepper',\n    showNavButtons: true\n  }\n}\n\nexport default uischema;\n","import React from 'react';\nimport { useState } from 'react';\n\ninterface RatingProps {\n  id?: string;\n  value: number;\n  updateValue: (newValue: number) => void;\n}\n\nexport const Rating: React.FC<RatingProps> = ({ id, value, updateValue }) => {\n  const [hoverAt, setHoverAt] = useState<number | null>(null);\n\n  return (\n    <div id='#/properties/rating' className='rating'>\n      <p>Rating:</p>\n      <span style={{ cursor: 'pointer' }}>\n        {[0, 1, 2, 3, 4].map((i) => {\n          const fullStars = hoverAt ?? value;\n\n          return (\n            <span\n              onMouseOver={() => setHoverAt(i + 1)}\n              onMouseOut={() => setHoverAt(null)}\n              onClick={() => updateValue(i + 1)}\n              key={`${id}_${i}`}\n            >\n              {i < fullStars ? '\\u2605' : '\\u2606'}\n            </span>\n          );\n        })}\n      </span>\n    </div>\n  );\n};\n","import { withJsonFormsControlProps } from '@jsonforms/react';\nimport { Rating } from './Rating';\n\ninterface RatingControlProps {\n  data: any;\n  handleChange(path: string, value: any): void;\n  path: string;\n}\n\nconst RatingControl = ({ data, handleChange, path }: RatingControlProps) => (\n  <Rating\n    value={data}\n    updateValue={(newValue: number) => handleChange(path, newValue)}\n  />\n);\n\nexport default withJsonFormsControlProps(RatingControl);\n","import { rankWith, scopeEndsWith } from '@jsonforms/core';\n\nexport default rankWith(\n  3, //increase rank as needed\n  scopeEndsWith('rating')\n);\n","import emlTemplate from './eml-blank.xml.js';\n\nconst Seek = (nodeKey, nodeValue, parentNode) => {\n  var node = parentNode.querySelector(nodeKey);\n  console.log(typeof nodeValue);\n  console.log(typeof nodeValue == 'string');\n  console.log(nodeValue);\n  console.log(nodeKey);\n  console.log(parentNode);\n  console.log(node);\n  if (typeof nodeValue == 'string') {\n    console.log('strtrigg');\n    /*const subTag = node.querySelector('description');\n    if(subTag && subTag.querySelector('para')) {\n      subTag.querySelector('para').innerHTML = nodeValue\n    }\n    else {*/\n      node.innerHTML = nodeValue;\n    //}\n  }\n  else if (Array.isArray(nodeValue)) {\n    console.log('arra');\n    const emptyNodeTemplate = node.cloneNode(true);\n\n    for (const [k, v] of Object.entries(nodeValue)) {\n      if (k !== '0') { // Make new nodes for many to one\n        const newSiblingNode = (emptyNodeTemplate.cloneNode(true) as HTMLElement);\n        node = node.parentNode.insertBefore(newSiblingNode, node.nextSibling);\n      }\n      if (typeof v == 'string') {\n        node.innerHTML = v;\n      } else {\n        for (const [label, item] of Object.entries(v)) {\n          Seek(label, item, node);\n        }\n      }\n    }\n  }\n  else if (typeof nodeValue == 'object') {\n    console.log('obj');\n    for (const [k, v] of Object.entries(nodeValue)) {\n      console.log(k);\n      console.log(v);\n      var newNode = node.querySelector(k);\n      if (newNode) { Seek(k, v, newNode.parentNode); }\n    }\n  }\n}\n\nconst MakePopulatedEML = (jsonformsData) => {\n  const parser = new DOMParser();\n  var emlDoc = parser.parseFromString(emlTemplate, \"text/xml\");\n  console.log(jsonformsData);\n\n  for (const [fieldKey, fieldValue] of Object.entries(jsonformsData)) {\n    Seek(fieldKey, fieldValue, emlDoc.querySelector('eml'));\n  }\n\n  var XMLS = new XMLSerializer();\n  var inp_xmls = XMLS.serializeToString(emlDoc);\n  console.log(inp_xmls);\n  return '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' + inp_xmls;\n};\n\nexport default MakePopulatedEML;\n","var emlTemplate = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<eml xmlns:eml=\"eml://ecoinformatics.org/eml-2.1.1\" xmlns:dc=\"http://purl.org/dc/terms/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"eml://ecoinformatics.org/eml-2.1.1 http://rs.gbif.org/schema/eml-gbif-profile/1.1/eml.xsd\" packageId=\"https://ipt.gbif.no/resource?id=test/v1.1\" system=\"http://gbif.org\" scope=\"system\" xml:lang=\"eng\">\n   <dataset>\n      <alternateIdentifier />\n      <title xml:lang=\"eng\" />\n      <creator>\n         <individualName>\n            <givenName />\n            <surName />\n         </individualName>\n         <organizationName />\n         <positionName />\n         <address>\n            <deliveryPoint />\n            <city />\n            <administrativeArea />\n            <postalCode />\n            <country />\n         </address>\n         <phone />\n         <electronicMailAddress />\n         <onlineUrl />\n         <userId directory=\"\" />\n      </creator>\n      <metadataProvider>\n         <individualName>\n            <givenName />\n            <surName />\n         </individualName>\n         <organizationName />\n         <positionName />\n         <address>\n            <deliveryPoint />\n            <city />\n            <administrativeArea />\n            <postalCode />\n            <country />\n         </address>\n         <phone />\n         <electronicMailAddress />\n         <onlineUrl />\n         <userId directory=\"\" />\n      </metadataProvider>\n      <associatedParty>\n         <individualName>\n            <givenName />\n            <surName />\n         </individualName>\n         <organizationName />\n         <positionName />\n         <address>\n            <deliveryPoint />\n            <city />\n            <administrativeArea />\n            <postalCode />\n            <country />\n         </address>\n         <phone />\n         <electronicMailAddress />\n         <onlineUrl />\n         <role />\n      </associatedParty>\n      <pubDate />\n      <language />\n      <abstract>\n         <para />\n      </abstract>\n      <keywordSet>\n         <keyword />\n         <keywordThesaurus />\n      </keywordSet>\n      <additionalInfo>\n         <para />\n      </additionalInfo>\n      <intellectualRights>\n         <para>\n            This work is licensed under a\n            <ulink url=\"http://creativecommons.org/licenses/by/4.0/legalcode\">\n               <citetitle>Creative Commons Attribution (CC-BY) 4.0 License</citetitle>\n            </ulink>.\n         </para>\n      </intellectualRights>\n      <distribution scope=\"document\">\n         <online>\n            <url function=\"information\" />\n         </online>\n      </distribution>\n      <coverage>\n         <geographicCoverage>\n            <geographicDescription />\n            <boundingCoordinates>\n               <westBoundingCoordinate />\n               <eastBoundingCoordinate />\n               <northBoundingCoordinate />\n               <southBoundingCoordinate />\n            </boundingCoordinates>\n         </geographicCoverage>\n         <temporalCoverage>\n            <singleDateTime>\n               <calendarDate />\n            </singleDateTime>\n         </temporalCoverage>\n         <temporalCoverage>\n            <rangeOfDates>\n              <beginDate>\n                <calendarDate />\n              </beginDate>\n              <endDate>\n                <calendarDate />\n              </endDate>\n            </rangeOfDates>\n         </temporalCoverage>\n         <taxonomicCoverage>\n            <generalTaxonomicCoverage />\n            <taxonomicClassification>\n               <taxonRankName />\n               <taxonRankValue />\n               <commonName />\n            </taxonomicClassification>\n         </taxonomicCoverage>\n      </coverage>\n      <purpose>\n         <para />\n      </purpose>\n      <maintenance>\n         <description>\n            <para />\n         </description>\n         <maintenanceUpdateFrequency />\n      </maintenance>\n      <contact>\n         <individualName>\n            <givenName />\n            <surName />\n         </individualName>\n         <organizationName />\n         <positionName />\n         <address>\n            <deliveryPoint />\n            <city />\n            <administrativeArea />\n            <postalCode />\n            <country />\n         </address>\n         <phone />\n         <electronicMailAddress />\n         <onlineUrl />\n         <userId directory=\"\" />\n      </contact>\n      <methods>\n         <methodStep>\n            <description>\n               <para />\n            </description>\n         </methodStep>\n         <sampling>\n            <studyExtent>\n               <description>\n                  <para />\n               </description>\n            </studyExtent>\n            <samplingDescription>\n               <para />\n            </samplingDescription>\n         </sampling>\n         <qualityControl>\n            <description>\n               <para />\n            </description>\n         </qualityControl>\n      </methods>\n      <project>\n         <title />\n         <personnel>\n            <individualName>\n               <givenName />\n               <surName />\n            </individualName>\n            <userId directory=\"\" />\n            <role />\n         </personnel>\n         <abstract>\n            <para />\n         </abstract>\n         <funding>\n            <para />\n         </funding>\n         <studyAreaDescription>\n            <descriptor name=\"generic\" citableClassificationSystem=\"false\">\n               <descriptorValue />\n            </descriptor>\n         </studyAreaDescription>\n         <designDescription>\n            <description>\n               <para />\n            </description>\n         </designDescription>\n      </project>\n   </dataset>\n   <additionalMetadata>\n      <metadata>\n         <gbif>\n            <dateStamp />\n            <hierarchyLevel>dataset</hierarchyLevel>\n            <citation identifier=\"\" />\n            <bibliography>\n              <citation identifier=\"\">bib1</citation>\n            </bibliography>\n            <physical>\n               <objectName />\n               <characterEncoding />\n               <dataFormat>\n                  <externallyDefinedFormat>\n                     <formatName />\n                     <formatVersion />\n                  </externallyDefinedFormat>\n               </dataFormat>\n               <distribution>\n                  <online>\n                     <url function=\"download\" />\n                  </online>\n               </distribution>\n            </physical>\n            <resourceLogoUrl />\n            <collection>\n               <parentCollectionIdentifier />\n               <collectionIdentifier />\n               <collectionName />\n            </collection>\n            <formationPeriod />\n            <specimenPreservationMethod />\n            <livingTimePeriod />\n            <jgtiCuratorialUnit>\n               <jgtiUnitType />\n               <jgtiUnitRange>\n                  <beginRange />\n                  <endRange />\n               </jgtiUnitRange>\n            </jgtiCuratorialUnit>\n            <dc:replaces />\n         </gbif>\n      </metadata>\n   </additionalMetadata>\n</eml>`;\n\nexport default emlTemplate ;\n","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport MakePopulatedEML from './MakePopulatedEML';\n\ninterface Props {\n  jsonformsData: object;\n}\n\nconst MakeEMLButton: React.FC<Props> = ({\n    jsonformsData\n  }) => {\n\n  const downloadEML = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([MakePopulatedEML(jsonformsData)], { type: 'text/plain' });\n    element.href = URL.createObjectURL(file);\n    element.download = \"eml.xml\";\n    document.body.appendChild(element); // Required for this to work in FireFox\n    element.click();\n  };\n\n  return (\n    <Button onClick={downloadEML} color='primary' variant='contained'>\n      Download EML\n    </Button>\n  );\n}\n\nexport default MakeEMLButton;\n","import { Fragment, useState } from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport Grid from '@material-ui/core/Grid';\nimport './App.css';\nimport schema from './schema.js';\nimport uischema from './uischema.js';\nimport {\n  materialCells,\n  materialRenderers,\n} from '@jsonforms/material-renderers';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MakeEMLButton from \"./MakeEMLButton\";\n\n\nconst useStyles = makeStyles((_theme) => ({\n  container: {\n    padding: '0em 4em 1em 4em',\n    width: '100%',\n  },\n  title: {\n    textAlign: 'center',\n    padding: '0.25em',\n  },\n  dataContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    borderRadius: '0.25em',\n    backgroundColor: '#cecece',\n    marginBottom: '1rem',\n  },\n  resetButton: {\n    margin: 'auto',\n    display: 'block',\n  },\n  demoform: {\n    margin: 'auto',\n    padding: '1rem',\n  }\n}));\n\nconst initialData = {};\n\nconst renderers = [\n  ...materialRenderers,\n  //register custom renderers\n  { tester: ratingControlTester, renderer: RatingControl },\n];\n\nconst App = () => {\n  const classes = useStyles();\n  const [jsonformsData, setJsonformsData] = useState<any>(initialData);\n\n  return (\n    <Fragment>\n      <div className='App'>\n        <header className='App-header'>\n          <h1 className='App-title'>\n            EML generator\n          </h1>\n          <p className='App-intro'>Fill in metadata in English. More detail = better findability = more citations.</p>\n        </header>\n      </div>\n\n      <Grid\n        container\n        justify={'center'}\n        spacing={1}\n        className={classes.container}\n      >\n        <Grid item sm={12}>\n          <div className={classes.demoform}>\n            <JsonForms\n              schema={schema}\n              uischema={uischema}\n              data={jsonformsData}\n              renderers={renderers}\n              cells={materialCells}\n              onChange={({ errors, data }) => setJsonformsData(data)}\n            />\n          </div>\n          <MakeEMLButton jsonformsData={jsonformsData} />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { createMuiTheme, CssBaseline, ThemeProvider } from '@material-ui/core';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n/**\n * Customize form so each control has more space\n */\nconst theme = createMuiTheme({\n  overrides: {\n    MuiFormControl: {\n      root: {\n        margin: '0.8em 0',\n      },\n    },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}